GNU bash, version 4.4.20(1)-release (x86_64-pc-linux-gnu)
gcc -g p2original.c
 ./a.out
Enter the number1
Enter the number2
Enter the number3
Largest of 1 ,2 ,3 is 3 
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0x7f0: file p2original.c, line 31.
(gdb) r
Starting program: /home/runner/pps-IA1-practice-1/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p2original.c:31
31     a=input();
(gdb) s
input () at p2original.c:3
3   {
(gdb) n
5     printf("Enter the number");
(gdb) n
6     scanf("%d",&a);
(gdb) n
Enter the number1
7     return a;
(gdb) n
9   }
(gdb) n
main () at p2original.c:32
32     b=input();
(gdb) s
input () at p2original.c:3
3   {
(gdb) n
5     printf("Enter the number");
(gdb) n
6     scanf("%d",&a);
(gdb) n
Enter the number2
7     return a;
(gdb) n
9   }
(gdb) n
main () at p2original.c:33
33     c=input();
(gdb) s
input () at p2original.c:3
3   {
(gdb) n
5     printf("Enter the number");
(gdb) n
6     scanf("%d",&a);
(gdb) n
Enter the number3
7     return a;
(gdb) n
9   }
(gdb) n
main () at p2original.c:34
34     lar=cmp(a,b,c);
(gdb) s
cmp (a=1, b=2, c=3) at p2original.c:12
12    if(a>b && a>c)
(gdb) n
16    else if(b>a && b>c)
(gdb) n
21      return c;
(gdb) n
22  }
(gdb) n
main () at p2original.c:35
35     output(a,b,c,lar);
(gdb) s
output (a=1, b=2, c=3, largest=3) at p2original.c:25
25      printf("Largest of %d ,%d ,%d is %d",a,b,c,largest);
(gdb) n
27    }